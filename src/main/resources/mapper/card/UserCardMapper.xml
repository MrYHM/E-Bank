<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bank.dao.card.UserCardDAO" >
  <resultMap id="BaseResultMap" type="com.bank.model.card.UserCardModel" >
    <id column="user_card_id" property="userCardId" jdbcType="INTEGER" />
    <result column="user_card_num" property="userCardNum" jdbcType="VARCHAR" />
    <result column="user_card_balance" property="userCardBalance" jdbcType="DOUBLE" />
    <result column="user_card_state" property="userCardState" jdbcType="INTEGER" />
    <result column="user_card_user_id" property="userCardUserId" jdbcType="INTEGER" />
    <result column="user_card_type" property="userCardType" jdbcType="INTEGER" />
    <result column="user_card_opentime" property="user_card_opentime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_card_id, user_card_num, user_card_balance, user_card_state, user_card_user_id, 
    user_card_type,user_card_opentime
  </sql>
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_card
    where user_card_id = #{userCardId,jdbcType=INTEGER}
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from user_card
    where user_card_id = #{userCardId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bank.model.card.UserCardModel" useGeneratedKeys="true" keyProperty="userCardId">
    insert into user_card values (NULL, #{userCardNum,jdbcType=VARCHAR}, #{userCardBalance,jdbcType=INTEGER}, 
      #{userCardState,jdbcType=INTEGER}, #{userCardUserId,jdbcType=INTEGER}, #{userCardType,jdbcType=INTEGER}
      ,#{user_card_opentime})
  </insert>
  <update id="updateById" parameterType="com.bank.model.card.UserCardModel" >
    update user_card
    set user_card_num = #{userCardNum,jdbcType=VARCHAR},
      user_card_balance = #{userCardBalance,jdbcType=INTEGER},
      user_card_state = #{userCardState,jdbcType=INTEGER},
      user_card_user_id = #{userCardUserId,jdbcType=INTEGER},
      user_card_type = #{userCardType,jdbcType=INTEGER}
      user_card_opentime = #{user_card_opentime}
    where user_card_id = #{userCardId,jdbcType=INTEGER}
  </update>
  
  <!-- 根据用户查询所有卡片 -->
  <select id="selectAllByUser" resultType="com.bank.model.card.UserCardListModel" parameterType="java.lang.Integer">
  	SELECT uu.`user_name`,uc.`user_card_num`,bc.`card_name`,bc.`card_face`,uc.`user_card_balance`,uc.`user_card_state` 
	FROM user_card uc,bank_card bc,user_userinfo uu 
	WHERE bc.`card_id`=uc.`user_card_type` AND uc.`user_card_user_id`=uu.`user_id` AND uc.`user_card_user_id`=#{uid}
  </select>
  
  <!-- 根据id修改卡状态 -->
  <update id="updateCardStateById">
  	UPDATE user_card SET user_card_state = #{1} WHERE user_card_id = #{0};
  </update>
  <!-- 根据id修改卡余额 -->
  <update id="updateCardBalanceById">
  	UPDATE user_card SET user_card_balance = #{0} WHERE user_card_num = #{1};
  </update>
   <!-- 根据id查询卡余额 -->
  <select id="selectCardBalanceById">
  	SELECT user_card_balance FROM user_card WHERE user_card_num = #{cardnum};
  </select>
</mapper>